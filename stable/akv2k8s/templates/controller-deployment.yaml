{{- if .Values.controller.enabled -}}
{{- $dot := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.controller.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
    helm.sh/chart: {{ template "akv2k8s.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: akv2k8s-controller
    {{- if .Values.controller.labels }}
    {{ toYaml .Values.controller.labels | nindent 4 }}
    {{- end}}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "akv2k8s.controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.controller.podLabels }}
        {{ toYaml .Values.controller.podLabels | nindent 8 }}
        {{- end}}
    spec:
      serviceAccountName: {{ template "controller.serviceAccountName" . }}
      containers:
      - name: {{ .Values.controller.name }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        env:
        - name: RUNNING_INSIDE_AZURE_AKS
          value: {{ .Values.runningInsideAzureAks | quote }}
        - name: CUSTOM_AUTH
          value: {{ .Values.keyVault.customAuth | quote }}
        - name: LOG_LEVEL
          value: "{{ .Values.controller.logLevel }}"
        - name: LOG_FORMAT
          value: "{{ .Values.controller.logFormat }}"
        {{- range $key, $value := .Values.global.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- range $key, $value := .Values.controller.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.controller.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- if .Values.keyVault.env }}
        {{- range $key, $value := .Values.keyVault.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- if and .Values.env_injector.enabled .Values.keyVault.useAuthService }}
        - name: AKV_LABEL_NAME
          value: {{ .Values.env_injector.namespaceEnableLabel.name }}
        - name: AKV_LABEL_VALUE
          value: {{ .Values.env_injector.namespaceEnableLabel.value }}
        - name: AKV_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AKV_SECRET_NAME
          value: {{ template "envinjector.servingCertificate" . }}
        - name: CA_FILE
          value: /var/ca-cert/ca.crt
        - name: CA_CONFIG_MAP_NAME
          value: {{ .Values.env_injector.caBundleConfigMapName }}
        {{- end }}
        args:
          - "--cloudconfig={{ .Values.cloudConfig }}"
          # - "--version={{ .Values.controller.image.tag }}"
        {{- if .Values.controller.resources }}
        resources:
          {{ toYaml .Values.controller.resources | nindent 10 }}
        {{- end }}
  {{- if or (not .Values.keyVault.customAuth) (and .Values.env_injector.enabled .Values.keyVault.useAuthService) }}
        volumeMounts:
          {{- if not .Values.keyVault.customAuth }}
          - name: azure-config
            mountPath: "{{ .Values.cloudConfig }}"
            readOnly: true
          {{- end }}
          {{- if and .Values.env_injector.enabled .Values.keyVault.useAuthService }}
          - mountPath: /var/ca-cert
            name: ca-cert
          {{- end }}
      volumes:
      {{- if not .Values.keyVault.customAuth }}
      - name: azure-config
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- if and .Values.env_injector.enabled .Values.keyVault.useAuthService }}
      - name: ca-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.servingCertificate" . }}
      {{- end }}
  {{- end }}
      {{- if .Values.controller.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.controller.image.pullSecret }}"
      {{- end }}
      {{- if .Values.controller.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations }}
      tolerations:
        {{ toYaml .Values.controller.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.affinity }}
      affinity:
        {{ toYaml .Values.controller.affinity | nindent 8 }}
      {{- end }}
{{- end }}
