{{- $dot := . }}
{{- $customAuth := .Values.keyVault.customAuth }}
{{- $useAuthService := .Values.keyVault.useAuthService }}

{{- if .Values.controller.keyVaultOverride.enabled }}
{{- $customAuth = .Values.controller.keyVaultOverride.customAuth }}
{{- end -}}

{{- if .Values.controller.keyVaultOverride.enabled }}
{{- $useAuthService = .Values.controller.keyVaultOverride.useAuthService }}
{{- end -}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akv2k8s.controller.fullname" . }}
  labels:
    {{- include "akv2k8s.labels" . | nindent 4 }}
    {{- if .Values.controller.labels }}
    {{ toYaml .Values.controller.labels | indent 4 }}
    {{- end}}
spec:
  selector:
    matchLabels:
      {{- include "akv2k8s.selectors" . | nindent 6 }}
      {{- include "akv2k8s.components.controller" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "akv2k8s.selectors" . | nindent 8 }}
        {{- include "akv2k8s.components.controller" . | nindent 8 }}
        {{- if .Values.controller.podLabels }}
        {{ toYaml .Values.controller.podLabels | indent 8 }}
        {{- end}}
    spec:
      serviceAccountName: {{ template "controller.serviceAccountName" . }}
      containers:
      - name: {{ .Values.controller.name }}
        image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
        imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
        env:
        - name: RUNNING_INSIDE_AZURE_AKS
          value: {{ .Values.runningInsideAzureAks | quote }}
        - name: CUSTOM_AUTH
          value: {{ $customAuth | quote }}
        - name: LOG_LEVEL
          value: "{{ .Values.controller.logLevel }}"
        - name: LOG_FORMAT
          value: "{{ .Values.controller.logFormat }}"
        {{- range $key, $value := .Values.global.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- range $key, $value := .Values.controller.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.controller.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- if .Values.keyVault.env }}
        {{- range $key, $value := .Values.keyVault.env }}
        - name: {{ $key }}
          valueFrom:
            secretKeyRef:
              name: {{ template "akv2k8s.fullname" $dot }}-env
              key: {{ $key }}
        {{- end }}
        {{- end }}
        {{- if and .Values.env_injector.enabled .Values.keyVault.useAuthService }}
        - name: NAMESPACE_LABEL_SELECTOR_NAME
          value: {{ .Values.env_injector.namespaceLabelSelector.name }}
        - name: NAMESPACE_LABEL_SELECTOR_VALUE
          value: {{ .Values.env_injector.namespaceLabelSelector.value }}
        - name: AKV_CA_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AKV_CA_SECRET_NAME
          value: {{ template "envinjector.servingCertificate" . }}
        - name: CA_FILE
          value: /var/ca-cert/ca.crt
        - name: AKV_CA_CONFIG_MAP_NAME
          value: {{ .Values.env_injector.caBundleConfigMapName }}
        {{- end }}
        args:
          - "--cloudconfig={{ .Values.cloudConfig }}"
          # - "--version={{ .Values.controller.image.tag }}"
        {{- if .Values.controller.resources }}
        resources:
          {{ toYaml .Values.controller.resources | nindent 10 }}
        {{- end }}
  {{- if or (not $customAuth) (and .Values.env_injector.enabled $useAuthService) }}
        volumeMounts:
          {{- if not $customAuth }}
          - name: azure-config
            mountPath: "{{ .Values.cloudConfig }}"
            readOnly: true
          {{- end }}
          {{- if and .Values.env_injector.enabled $useAuthService }}
          - mountPath: /var/ca-cert
            name: ca-cert
          {{- end }}
      volumes:
      {{- if not $customAuth }}
      - name: azure-config
        hostPath:
          path: "{{ .Values.cloudConfig }}"
          type: File
      {{- end }}
      {{- if and .Values.env_injector.enabled $useAuthService }}
      - name: ca-cert
        secret:
          defaultMode: 420
          secretName: {{ template "envinjector.servingCertificate" . }}
      {{- end }}
  {{- end }}
      {{- if .Values.controller.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.controller.image.pullSecret }}"
      {{- end }}
      {{- if .Values.controller.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.controller.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.tolerations }}
      tolerations:
        {{ toYaml .Values.controller.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.affinity }}
      affinity:
        {{ toYaml .Values.controller.affinity | nindent 8 }}
      {{- end }}
{{- end }}
